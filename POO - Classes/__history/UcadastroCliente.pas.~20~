unit UcadastroCliente;

interface
      type


        TcadastroCliente = class

         private

           // atributos e métodos privados

            FcodCli : integer;
            Fnome : string;
            FdataNasc : string;
            FenderecoRes : string;
            Fcelular : string;
            procedure Setcelular(const Value: string);
            procedure SetcodCli(const Value: integer);
            procedure SetdataNasc(const Value: string);
            procedure SetenderecoRes(const Value: string);
            procedure Setnome(const Value: string);

         protected

         // atributos e métodos protegidos

         public

         // atributos e métodos públicos

           property celular: string read Fcelular write Setcelular;
           property codcli : integer read Fcodcli write Setcodcli;
           property dataNasc: string read FdataNasc write SetdataNasc;
           property enderecoRes: string read FenderecoRes write SetenderecoRes;
           property nome: string read Fnome write Setnome;

     end;

implementation

//declarar outras units para funcionamento correto

uses Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

{ TcadastroCliente }

procedure TcadastroCliente.Setcelular(const Value: string);
begin
  Fcelular := Value;
end;

procedure TcadastroCliente.SetcodCli(const Value: integer);
begin


  FcodCli := Value;
end;

procedure TcadastroCliente.SetdataNasc(const Value: string);
var
  DataDigitadaNoEdit:TDateTime; // função nativa do delphi
begin

  if not TryStrToDate(dataNasc,DataDigitadaNoEdit) then
     raise Exception.Create('Data inválida');

  FdataNasc := Value;
end;

procedure TcadastroCliente.SetenderecoRes(const Value: string);
begin
  FenderecoRes := Value;
end;

//criando regras de negócio - validação -  em um campo específico
procedure TcadastroCliente.Setnome(const Value: string);
begin
  if Length(Value) < 5 then
   raise Exception.Create('Necessário mais de 5 caracteres');

  Fnome := Value;
end;

end.
